#movie-query.properties

selectList=SELECT * FROM MOVIE JOIN STILL_IMAGE USING(MOVIE_NO) WHERE MOVIE_NO=?
selectL=SELECT * FROM MOVIE WHERE MOVIE_NO=?
selectS=SELECT DISTINCT M.MOVIE_NO, M.TITLE, M.AGE_LIMIT, M.ON_DATE FROM MOVIE M JOIN SCREEN S ON M.MOVIE_NO = S.MOVIE_NO JOIN ROOM R ON R.ROOM_NO = S.ROOM_NO AND R.THEATER_NO = ? WHERE TO_CHAR(SCREEN_DATE,'yyyy-MM-dd')= ?
topFiveMovies=SELECT T.*, SI.MODIFY_NAME FROM(SELECT S.MOVIE_NO, COUNT(*)"COUNT", MAX(ADDFILE_NO) MAXNO FROM RESERVED R JOIN SCREEN S ON (R.SCREEN_NO=S.SCREEN_NO) JOIN MOVIE M ON (M.MOVIE_NO=S.MOVIE_NO) JOIN STILL_IMAGE I ON (M.MOVIE_NO=I.MOVIE_NO) WHERE M.STATUS='Y' AND I."LEVEL"=? GROUP BY S.MOVIE_NO, M.ON_DATE ORDER BY COUNT DESC, M.ON_DATE DESC) T JOIN STILL_IMAGE SI ON(T.MAXNO=SI.ADDFILE_NO) AND ROWNUM<=5
newMovies=SELECT M.MOVIE_NO, M.ON_DATE, M.AGE_LIMIT, TITLE, SI.MODIFY_NAME FROM MOVIE M JOIN STILL_IMAGE SI ON (M.MOVIE_NO = SI.MOVIE_NO) WHERE M.STATUS='C' AND M.ON_DATE>SYSDATE AND SI."LEVEL"=0 AND ROWNUM<=5
selectScreen=SELECT DISTINCT M.MOVIE_NO, M.TITLE, M.AGE_LIMIT FROM MOVIE M JOIN SCREEN S ON M.MOVIE_NO = S.MOVIE_NO JOIN ROOM R ON R.ROOM_NO = S.ROOM_NO AND R.THEATER_NO = ? ORDER BY M.MOVIE_NO

insertMovie=INSERT INTO MOVIE VALUES(SEQ_MV.NEXTVAL,?,?,?,?,?,?,?,'C', ?+30)
insertMovieGenre=INSERT INTO MOVIE_GENRE VALUES(SEQ_MV.CURRVAL,?)
insertStillImage=INSERT INTO STILL_IMAGE VALUES(SEQ_FN.NEXTVAL,?,?,?,SEQ_MV.CURRVAL)
getOnListCount=SELECT COUNT(*) FROM MOVIE WHERE STATUS='Y'
selectOnList=SELECT * FROM (SELECT ROWNUM RNUM, A.* FROM(SELECT MOVIE_NO, TITLE, RUNTIME, DIRECTOR, ACTOR, AGE_LIMIT, SYNOPSIS, ON_DATE, MODIFY_NAME FROM MOVIE M LEFT JOIN STILL_IMAGE USING(MOVIE_NO) WHERE M.STATUS='Y' AND "LEVEL"=0 ORDER BY MOVIE_NO DESC) A) WHERE RNUM BETWEEN ? AND ?
getComingListCount=SELECT COUNT(*) FROM MOVIE WHERE STATUS='C'
selectComingList=SELECT * FROM (SELECT ROWNUM RNUM, A.* FROM(SELECT MOVIE_NO, TITLE, RUNTIME, DIRECTOR, ACTOR, AGE_LIMIT, SYNOPSIS, ON_DATE, MODIFY_NAME FROM MOVIE M LEFT JOIN STILL_IMAGE USING(MOVIE_NO) WHERE M.STATUS='C' AND "LEVEL"=0 ORDER BY MOVIE_NO DESC) A) WHERE RNUM BETWEEN ? AND ?
getOffListCount=SELECT COUNT(*) FROM MOVIE WHERE STATUS='F'
selectOffList=SELECT * FROM (SELECT ROWNUM RNUM, A.* FROM(SELECT MOVIE_NO, TITLE, RUNTIME, DIRECTOR, ACTOR, AGE_LIMIT, SYNOPSIS, ON_DATE, MODIFY_NAME FROM MOVIE M LEFT JOIN STILL_IMAGE USING(MOVIE_NO) WHERE M.STATUS='F' AND "LEVEL"=0 ORDER BY MOVIE_NO DESC) A) WHERE RNUM BETWEEN ? AND ?



getGenre=SELECT GENRE_NAME FROM GENRE JOIN MOVIE_GENRE USING(GENRE_NO) JOIN MOVIE USING(MOVIE_NO) WHERE MOVIE_NO = ?
updateMovie=UPDATE MOVIE SET TITLE=?, DIRECTOR=?, ACTOR=?, ON_DATE=?, RUNTIME=?, AGE_LIMIT=?, SYNOPSIS=? WHERE MOVIE_NO=?
deleteGenre=DELETE FROM MOVIE_GENRE WHERE MOVIE_NO = ?
updateMovieGenre=INSERT INTO MOVIE_GENRE VALUES(?,?)
getMovieImages=SELECT MODIFY_NAME FROM STILL_IMAGE SI WHERE MOVIE_NO=? AND "LEVEL" != 0
deleteMovie=DELETE FROM MOVIE WHERE MOVIE_NO = ?
rerunMovie=UPDATE MOVIE SET OFF_DATE = ? , STATUS='Y'WHERE MOVIE_NO = ?
selectWholeMovie=SELECT TITLE, MOVIE_NO FROM MOVIE JOIN "SCREEN" USING(MOVIE_NO) JOIN ROOM USING(ROOM_NO) JOIN THEATER USING(THEATER_NO) WHERE THEATER_NO = ? GROUP BY TITLE, MOVIE_NO
ajaxMovie=SELECT TITLE, MOVIE_NO FROM MOVIE JOIN SCREEN USING(MOVIE_NO) JOIN ROOM USING(ROOM_NO) JOIN THEATER USING(THEATER_NO) WHERE THEATER_NO= ? GROUP BY TITLE, MOVIE_NO

selectStill=SELECT * FROM STILL_IMAGE WHERE MOVIE_NO=? AND "LEVEL"=2